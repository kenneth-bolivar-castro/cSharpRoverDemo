#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podr&iacute;an causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace slnRoverDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Rover")]
	public partial class RoverDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCarritos(Carritos instance);
    partial void UpdateCarritos(Carritos instance);
    partial void DeleteCarritos(Carritos instance);
    partial void InsertZonas(Zonas instance);
    partial void UpdateZonas(Zonas instance);
    partial void DeleteZonas(Zonas instance);
    partial void InsertCategorias(Categorias instance);
    partial void UpdateCategorias(Categorias instance);
    partial void DeleteCategorias(Categorias instance);
    partial void InsertCombustibles(Combustibles instance);
    partial void UpdateCombustibles(Combustibles instance);
    partial void DeleteCombustibles(Combustibles instance);
    partial void InsertConfiguraciones(Configuraciones instance);
    partial void UpdateConfiguraciones(Configuraciones instance);
    partial void DeleteConfiguraciones(Configuraciones instance);
    partial void InsertDetalleUsuario(DetalleUsuario instance);
    partial void UpdateDetalleUsuario(DetalleUsuario instance);
    partial void DeleteDetalleUsuario(DetalleUsuario instance);
    partial void InsertFotos(Fotos instance);
    partial void UpdateFotos(Fotos instance);
    partial void DeleteFotos(Fotos instance);
    partial void InsertModelos(Modelos instance);
    partial void UpdateModelos(Modelos instance);
    partial void DeleteModelos(Modelos instance);
    partial void InsertMonedas(Monedas instance);
    partial void UpdateMonedas(Monedas instance);
    partial void DeleteMonedas(Monedas instance);
    partial void InsertOrdenes(Ordenes instance);
    partial void UpdateOrdenes(Ordenes instance);
    partial void DeleteOrdenes(Ordenes instance);
    partial void InsertRepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo instance);
    partial void UpdateRepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo instance);
    partial void DeleteRepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo instance);
    partial void InsertTipoModelo(TipoModelo instance);
    partial void UpdateTipoModelo(TipoModelo instance);
    partial void DeleteTipoModelo(TipoModelo instance);
    partial void InsertTipoPagos(TipoPagos instance);
    partial void UpdateTipoPagos(TipoPagos instance);
    partial void DeleteTipoPagos(TipoPagos instance);
    partial void InsertVehiculoUsuario(VehiculoUsuario instance);
    partial void UpdateVehiculoUsuario(VehiculoUsuario instance);
    partial void DeleteVehiculoUsuario(VehiculoUsuario instance);
    partial void InsertRepuestos(Repuestos instance);
    partial void UpdateRepuestos(Repuestos instance);
    partial void DeleteRepuestos(Repuestos instance);
    partial void InsertDetalleCarrito(DetalleCarrito instance);
    partial void UpdateDetalleCarrito(DetalleCarrito instance);
    partial void DeleteDetalleCarrito(DetalleCarrito instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public RoverDataContext() : 
				base(global::slnRoverDatos.Properties.Settings.Default.RoverConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RoverDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoverDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoverDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoverDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Carritos> Carritos
		{
			get
			{
				return this.GetTable<Carritos>();
			}
		}
		
		public System.Data.Linq.Table<Zonas> Zonas
		{
			get
			{
				return this.GetTable<Zonas>();
			}
		}
		
		public System.Data.Linq.Table<Categorias> Categorias
		{
			get
			{
				return this.GetTable<Categorias>();
			}
		}
		
		public System.Data.Linq.Table<Combustibles> Combustibles
		{
			get
			{
				return this.GetTable<Combustibles>();
			}
		}
		
		public System.Data.Linq.Table<Configuraciones> Configuraciones
		{
			get
			{
				return this.GetTable<Configuraciones>();
			}
		}
		
		public System.Data.Linq.Table<DetalleUsuario> DetalleUsuario
		{
			get
			{
				return this.GetTable<DetalleUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Fotos> Fotos
		{
			get
			{
				return this.GetTable<Fotos>();
			}
		}
		
		public System.Data.Linq.Table<Modelos> Modelos
		{
			get
			{
				return this.GetTable<Modelos>();
			}
		}
		
		public System.Data.Linq.Table<Monedas> Monedas
		{
			get
			{
				return this.GetTable<Monedas>();
			}
		}
		
		public System.Data.Linq.Table<Ordenes> Ordenes
		{
			get
			{
				return this.GetTable<Ordenes>();
			}
		}
		
		public System.Data.Linq.Table<RepuestosPorTipoDeModelo> RepuestosPorTipoDeModelo
		{
			get
			{
				return this.GetTable<RepuestosPorTipoDeModelo>();
			}
		}
		
		public System.Data.Linq.Table<TipoModelo> TipoModelo
		{
			get
			{
				return this.GetTable<TipoModelo>();
			}
		}
		
		public System.Data.Linq.Table<TipoPagos> TipoPagos
		{
			get
			{
				return this.GetTable<TipoPagos>();
			}
		}
		
		public System.Data.Linq.Table<VehiculoUsuario> VehiculoUsuario
		{
			get
			{
				return this.GetTable<VehiculoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<v_Modelos> v_Modelos
		{
			get
			{
				return this.GetTable<v_Modelos>();
			}
		}
		
		public System.Data.Linq.Table<Repuestos> Repuestos
		{
			get
			{
				return this.GetTable<Repuestos>();
			}
		}
		
		public System.Data.Linq.Table<v_repuestosPorTipoDeModelo> v_repuestosPorTipoDeModelo
		{
			get
			{
				return this.GetTable<v_repuestosPorTipoDeModelo>();
			}
		}
		
		public System.Data.Linq.Table<DetalleCarrito> DetalleCarrito
		{
			get
			{
				return this.GetTable<DetalleCarrito>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<v_Usuarios> v_Usuarios
		{
			get
			{
				return this.GetTable<v_Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<v_Ordenes> v_Ordenes
		{
			get
			{
				return this.GetTable<v_Ordenes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carritos")]
	public partial class Carritos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUsuario;
		
		private System.DateTime _Fecha;
		
		private EntitySet<Ordenes> _Ordenes;
		
		private EntitySet<DetalleCarrito> _DetalleCarrito;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Carritos()
		{
			this._Ordenes = new EntitySet<Ordenes>(new Action<Ordenes>(this.attach_Ordenes), new Action<Ordenes>(this.detach_Ordenes));
			this._DetalleCarrito = new EntitySet<DetalleCarrito>(new Action<DetalleCarrito>(this.attach_DetalleCarrito), new Action<DetalleCarrito>(this.detach_DetalleCarrito));
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime2 NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carritos_Ordenes", Storage="_Ordenes", ThisKey="Id", OtherKey="IdCarrito")]
		public EntitySet<Ordenes> Ordenes
		{
			get
			{
				return this._Ordenes;
			}
			set
			{
				this._Ordenes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carritos_DetalleCarrito", Storage="_DetalleCarrito", ThisKey="Id", OtherKey="IdCarrito")]
		public EntitySet<DetalleCarrito> DetalleCarrito
		{
			get
			{
				return this._DetalleCarrito;
			}
			set
			{
				this._DetalleCarrito.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Carritos", Storage="_Usuarios", ThisKey="IdUsuario", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Carritos.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Carritos.Add(this);
						this._IdUsuario = value.Id;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordenes(Ordenes entity)
		{
			this.SendPropertyChanging();
			entity.Carritos = this;
		}
		
		private void detach_Ordenes(Ordenes entity)
		{
			this.SendPropertyChanging();
			entity.Carritos = null;
		}
		
		private void attach_DetalleCarrito(DetalleCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Carritos = this;
		}
		
		private void detach_DetalleCarrito(DetalleCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Carritos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zonas")]
	public partial class Zonas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private decimal _Precio;
		
		private EntitySet<Ordenes> _Ordenes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public Zonas()
		{
			this._Ordenes = new EntitySet<Ordenes>(new Action<Ordenes>(this.attach_Ordenes), new Action<Ordenes>(this.detach_Ordenes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zonas_Ordenes", Storage="_Ordenes", ThisKey="Id", OtherKey="IdZona")]
		public EntitySet<Ordenes> Ordenes
		{
			get
			{
				return this._Ordenes;
			}
			set
			{
				this._Ordenes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordenes(Ordenes entity)
		{
			this.SendPropertyChanging();
			entity.Zonas = this;
		}
		
		private void detach_Ordenes(Ordenes entity)
		{
			this.SendPropertyChanging();
			entity.Zonas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categorias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Descripcion;
		
		private EntitySet<Repuestos> _Repuestos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Categorias()
		{
			this._Repuestos = new EntitySet<Repuestos>(new Action<Repuestos>(this.attach_Repuestos), new Action<Repuestos>(this.detach_Repuestos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorias_Repuestos", Storage="_Repuestos", ThisKey="Id", OtherKey="IdCategoria")]
		public EntitySet<Repuestos> Repuestos
		{
			get
			{
				return this._Repuestos;
			}
			set
			{
				this._Repuestos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Repuestos(Repuestos entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = this;
		}
		
		private void detach_Repuestos(Repuestos entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Combustibles")]
	public partial class Combustibles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<VehiculoUsuario> _VehiculoUsuario;
		
		private EntitySet<Repuestos> _Repuestos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Combustibles()
		{
			this._VehiculoUsuario = new EntitySet<VehiculoUsuario>(new Action<VehiculoUsuario>(this.attach_VehiculoUsuario), new Action<VehiculoUsuario>(this.detach_VehiculoUsuario));
			this._Repuestos = new EntitySet<Repuestos>(new Action<Repuestos>(this.attach_Repuestos), new Action<Repuestos>(this.detach_Repuestos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combustibles_VehiculoUsuario", Storage="_VehiculoUsuario", ThisKey="Id", OtherKey="IdCombustible")]
		public EntitySet<VehiculoUsuario> VehiculoUsuario
		{
			get
			{
				return this._VehiculoUsuario;
			}
			set
			{
				this._VehiculoUsuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combustibles_Repuestos", Storage="_Repuestos", ThisKey="Id", OtherKey="IdCombustible")]
		public EntitySet<Repuestos> Repuestos
		{
			get
			{
				return this._Repuestos;
			}
			set
			{
				this._Repuestos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VehiculoUsuario(VehiculoUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Combustibles = this;
		}
		
		private void detach_VehiculoUsuario(VehiculoUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Combustibles = null;
		}
		
		private void attach_Repuestos(Repuestos entity)
		{
			this.SendPropertyChanging();
			entity.Combustibles = this;
		}
		
		private void detach_Repuestos(Repuestos entity)
		{
			this.SendPropertyChanging();
			entity.Combustibles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuraciones")]
	public partial class Configuraciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Clave;
		
		private string _Valor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    #endregion
		
		public Configuraciones()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleUsuario")]
	public partial class DetalleUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public DetalleUsuario()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_DetalleUsuario", Storage="_Usuarios", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.DetalleUsuario = null;
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.DetalleUsuario = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fotos")]
	public partial class Fotos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdRepuesto;
		
		private string _UrlFoto;
		
		private EntityRef<Repuestos> _Repuestos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdRepuestoChanging(int value);
    partial void OnIdRepuestoChanged();
    partial void OnUrlFotoChanging(string value);
    partial void OnUrlFotoChanged();
    #endregion
		
		public Fotos()
		{
			this._Repuestos = default(EntityRef<Repuestos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRepuesto", DbType="Int NOT NULL")]
		public int IdRepuesto
		{
			get
			{
				return this._IdRepuesto;
			}
			set
			{
				if ((this._IdRepuesto != value))
				{
					if (this._Repuestos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRepuestoChanging(value);
					this.SendPropertyChanging();
					this._IdRepuesto = value;
					this.SendPropertyChanged("IdRepuesto");
					this.OnIdRepuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlFoto", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UrlFoto
		{
			get
			{
				return this._UrlFoto;
			}
			set
			{
				if ((this._UrlFoto != value))
				{
					this.OnUrlFotoChanging(value);
					this.SendPropertyChanging();
					this._UrlFoto = value;
					this.SendPropertyChanged("UrlFoto");
					this.OnUrlFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repuestos_Fotos", Storage="_Repuestos", ThisKey="IdRepuesto", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Repuestos Repuestos
		{
			get
			{
				return this._Repuestos.Entity;
			}
			set
			{
				Repuestos previousValue = this._Repuestos.Entity;
				if (((previousValue != value) 
							|| (this._Repuestos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Repuestos.Entity = null;
						previousValue.Fotos.Remove(this);
					}
					this._Repuestos.Entity = value;
					if ((value != null))
					{
						value.Fotos.Add(this);
						this._IdRepuesto = value.Id;
					}
					else
					{
						this._IdRepuesto = default(int);
					}
					this.SendPropertyChanged("Repuestos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modelos")]
	public partial class Modelos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _RangoA_os;
		
		private EntitySet<TipoModelo> _TipoModelo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnRangoA_osChanging(string value);
    partial void OnRangoA_osChanged();
    #endregion
		
		public Modelos()
		{
			this._TipoModelo = new EntitySet<TipoModelo>(new Action<TipoModelo>(this.attach_TipoModelo), new Action<TipoModelo>(this.detach_TipoModelo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangoA_os", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string RangoA_os
		{
			get
			{
				return this._RangoA_os;
			}
			set
			{
				if ((this._RangoA_os != value))
				{
					this.OnRangoA_osChanging(value);
					this.SendPropertyChanging();
					this._RangoA_os = value;
					this.SendPropertyChanged("RangoA_os");
					this.OnRangoA_osChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelos_TipoModelo", Storage="_TipoModelo", ThisKey="Id", OtherKey="IdModelo")]
		public EntitySet<TipoModelo> TipoModelo
		{
			get
			{
				return this._TipoModelo;
			}
			set
			{
				this._TipoModelo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipoModelo(TipoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Modelos = this;
		}
		
		private void detach_TipoModelo(TipoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Modelos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Monedas")]
	public partial class Monedas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Simbolo;
		
		private decimal _Valor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnSimboloChanging(string value);
    partial void OnSimboloChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    #endregion
		
		public Monedas()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Simbolo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Simbolo
		{
			get
			{
				return this._Simbolo;
			}
			set
			{
				if ((this._Simbolo != value))
				{
					this.OnSimboloChanging(value);
					this.SendPropertyChanging();
					this._Simbolo = value;
					this.SendPropertyChanged("Simbolo");
					this.OnSimboloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Money NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordenes")]
	public partial class Ordenes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdTipoPago;
		
		private int _IdCarrito;
		
		private int _IdZona;
		
		private string _Direccion;
		
		private bool _Procesada;
		
		private EntityRef<Carritos> _Carritos;
		
		private EntityRef<Zonas> _Zonas;
		
		private EntityRef<TipoPagos> _TipoPagos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdTipoPagoChanging(int value);
    partial void OnIdTipoPagoChanged();
    partial void OnIdCarritoChanging(int value);
    partial void OnIdCarritoChanged();
    partial void OnIdZonaChanging(int value);
    partial void OnIdZonaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnProcesadaChanging(bool value);
    partial void OnProcesadaChanged();
    #endregion
		
		public Ordenes()
		{
			this._Carritos = default(EntityRef<Carritos>);
			this._Zonas = default(EntityRef<Zonas>);
			this._TipoPagos = default(EntityRef<TipoPagos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoPago", DbType="Int NOT NULL")]
		public int IdTipoPago
		{
			get
			{
				return this._IdTipoPago;
			}
			set
			{
				if ((this._IdTipoPago != value))
				{
					if (this._TipoPagos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoPagoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoPago = value;
					this.SendPropertyChanged("IdTipoPago");
					this.OnIdTipoPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCarrito", DbType="Int NOT NULL")]
		public int IdCarrito
		{
			get
			{
				return this._IdCarrito;
			}
			set
			{
				if ((this._IdCarrito != value))
				{
					if (this._Carritos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCarritoChanging(value);
					this.SendPropertyChanging();
					this._IdCarrito = value;
					this.SendPropertyChanged("IdCarrito");
					this.OnIdCarritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZona", DbType="Int NOT NULL")]
		public int IdZona
		{
			get
			{
				return this._IdZona;
			}
			set
			{
				if ((this._IdZona != value))
				{
					if (this._Zonas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdZonaChanging(value);
					this.SendPropertyChanging();
					this._IdZona = value;
					this.SendPropertyChanged("IdZona");
					this.OnIdZonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procesada", DbType="Bit NOT NULL")]
		public bool Procesada
		{
			get
			{
				return this._Procesada;
			}
			set
			{
				if ((this._Procesada != value))
				{
					this.OnProcesadaChanging(value);
					this.SendPropertyChanging();
					this._Procesada = value;
					this.SendPropertyChanged("Procesada");
					this.OnProcesadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carritos_Ordenes", Storage="_Carritos", ThisKey="IdCarrito", OtherKey="Id", IsForeignKey=true)]
		public Carritos Carritos
		{
			get
			{
				return this._Carritos.Entity;
			}
			set
			{
				Carritos previousValue = this._Carritos.Entity;
				if (((previousValue != value) 
							|| (this._Carritos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carritos.Entity = null;
						previousValue.Ordenes.Remove(this);
					}
					this._Carritos.Entity = value;
					if ((value != null))
					{
						value.Ordenes.Add(this);
						this._IdCarrito = value.Id;
					}
					else
					{
						this._IdCarrito = default(int);
					}
					this.SendPropertyChanged("Carritos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zonas_Ordenes", Storage="_Zonas", ThisKey="IdZona", OtherKey="Id", IsForeignKey=true)]
		public Zonas Zonas
		{
			get
			{
				return this._Zonas.Entity;
			}
			set
			{
				Zonas previousValue = this._Zonas.Entity;
				if (((previousValue != value) 
							|| (this._Zonas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zonas.Entity = null;
						previousValue.Ordenes.Remove(this);
					}
					this._Zonas.Entity = value;
					if ((value != null))
					{
						value.Ordenes.Add(this);
						this._IdZona = value.Id;
					}
					else
					{
						this._IdZona = default(int);
					}
					this.SendPropertyChanged("Zonas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoPagos_Ordenes", Storage="_TipoPagos", ThisKey="IdTipoPago", OtherKey="Id", IsForeignKey=true)]
		public TipoPagos TipoPagos
		{
			get
			{
				return this._TipoPagos.Entity;
			}
			set
			{
				TipoPagos previousValue = this._TipoPagos.Entity;
				if (((previousValue != value) 
							|| (this._TipoPagos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoPagos.Entity = null;
						previousValue.Ordenes.Remove(this);
					}
					this._TipoPagos.Entity = value;
					if ((value != null))
					{
						value.Ordenes.Add(this);
						this._IdTipoPago = value.Id;
					}
					else
					{
						this._IdTipoPago = default(int);
					}
					this.SendPropertyChanged("TipoPagos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepuestosPorTipoDeModelo")]
	public partial class RepuestosPorTipoDeModelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdRepuesto;
		
		private int _IdTipoModelo;
		
		private EntityRef<TipoModelo> _TipoModelo;
		
		private EntityRef<Repuestos> _Repuestos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdRepuestoChanging(int value);
    partial void OnIdRepuestoChanged();
    partial void OnIdTipoModeloChanging(int value);
    partial void OnIdTipoModeloChanged();
    #endregion
		
		public RepuestosPorTipoDeModelo()
		{
			this._TipoModelo = default(EntityRef<TipoModelo>);
			this._Repuestos = default(EntityRef<Repuestos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRepuesto", DbType="Int NOT NULL")]
		public int IdRepuesto
		{
			get
			{
				return this._IdRepuesto;
			}
			set
			{
				if ((this._IdRepuesto != value))
				{
					if (this._Repuestos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRepuestoChanging(value);
					this.SendPropertyChanging();
					this._IdRepuesto = value;
					this.SendPropertyChanged("IdRepuesto");
					this.OnIdRepuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoModelo", DbType="Int NOT NULL")]
		public int IdTipoModelo
		{
			get
			{
				return this._IdTipoModelo;
			}
			set
			{
				if ((this._IdTipoModelo != value))
				{
					if (this._TipoModelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoModeloChanging(value);
					this.SendPropertyChanging();
					this._IdTipoModelo = value;
					this.SendPropertyChanged("IdTipoModelo");
					this.OnIdTipoModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoModelo_RepuestosPorTipoDeModelo", Storage="_TipoModelo", ThisKey="IdTipoModelo", OtherKey="Id", IsForeignKey=true)]
		public TipoModelo TipoModelo
		{
			get
			{
				return this._TipoModelo.Entity;
			}
			set
			{
				TipoModelo previousValue = this._TipoModelo.Entity;
				if (((previousValue != value) 
							|| (this._TipoModelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoModelo.Entity = null;
						previousValue.RepuestosPorTipoDeModelo.Remove(this);
					}
					this._TipoModelo.Entity = value;
					if ((value != null))
					{
						value.RepuestosPorTipoDeModelo.Add(this);
						this._IdTipoModelo = value.Id;
					}
					else
					{
						this._IdTipoModelo = default(int);
					}
					this.SendPropertyChanged("TipoModelo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repuestos_RepuestosPorTipoDeModelo", Storage="_Repuestos", ThisKey="IdRepuesto", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Repuestos Repuestos
		{
			get
			{
				return this._Repuestos.Entity;
			}
			set
			{
				Repuestos previousValue = this._Repuestos.Entity;
				if (((previousValue != value) 
							|| (this._Repuestos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Repuestos.Entity = null;
						previousValue.RepuestosPorTipoDeModelo.Remove(this);
					}
					this._Repuestos.Entity = value;
					if ((value != null))
					{
						value.RepuestosPorTipoDeModelo.Add(this);
						this._IdRepuesto = value.Id;
					}
					else
					{
						this._IdRepuesto = default(int);
					}
					this.SendPropertyChanged("Repuestos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoModelo")]
	public partial class TipoModelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private int _IdModelo;
		
		private EntitySet<RepuestosPorTipoDeModelo> _RepuestosPorTipoDeModelo;
		
		private EntitySet<VehiculoUsuario> _VehiculoUsuario;
		
		private EntityRef<Modelos> _Modelos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIdModeloChanging(int value);
    partial void OnIdModeloChanged();
    #endregion
		
		public TipoModelo()
		{
			this._RepuestosPorTipoDeModelo = new EntitySet<RepuestosPorTipoDeModelo>(new Action<RepuestosPorTipoDeModelo>(this.attach_RepuestosPorTipoDeModelo), new Action<RepuestosPorTipoDeModelo>(this.detach_RepuestosPorTipoDeModelo));
			this._VehiculoUsuario = new EntitySet<VehiculoUsuario>(new Action<VehiculoUsuario>(this.attach_VehiculoUsuario), new Action<VehiculoUsuario>(this.detach_VehiculoUsuario));
			this._Modelos = default(EntityRef<Modelos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModelo", DbType="Int NOT NULL")]
		public int IdModelo
		{
			get
			{
				return this._IdModelo;
			}
			set
			{
				if ((this._IdModelo != value))
				{
					if (this._Modelos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdModeloChanging(value);
					this.SendPropertyChanging();
					this._IdModelo = value;
					this.SendPropertyChanged("IdModelo");
					this.OnIdModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoModelo_RepuestosPorTipoDeModelo", Storage="_RepuestosPorTipoDeModelo", ThisKey="Id", OtherKey="IdTipoModelo")]
		public EntitySet<RepuestosPorTipoDeModelo> RepuestosPorTipoDeModelo
		{
			get
			{
				return this._RepuestosPorTipoDeModelo;
			}
			set
			{
				this._RepuestosPorTipoDeModelo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoModelo_VehiculoUsuario", Storage="_VehiculoUsuario", ThisKey="Id", OtherKey="IdTipoModelo")]
		public EntitySet<VehiculoUsuario> VehiculoUsuario
		{
			get
			{
				return this._VehiculoUsuario;
			}
			set
			{
				this._VehiculoUsuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelos_TipoModelo", Storage="_Modelos", ThisKey="IdModelo", OtherKey="Id", IsForeignKey=true)]
		public Modelos Modelos
		{
			get
			{
				return this._Modelos.Entity;
			}
			set
			{
				Modelos previousValue = this._Modelos.Entity;
				if (((previousValue != value) 
							|| (this._Modelos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelos.Entity = null;
						previousValue.TipoModelo.Remove(this);
					}
					this._Modelos.Entity = value;
					if ((value != null))
					{
						value.TipoModelo.Add(this);
						this._IdModelo = value.Id;
					}
					else
					{
						this._IdModelo = default(int);
					}
					this.SendPropertyChanged("Modelos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo entity)
		{
			this.SendPropertyChanging();
			entity.TipoModelo = this;
		}
		
		private void detach_RepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo entity)
		{
			this.SendPropertyChanging();
			entity.TipoModelo = null;
		}
		
		private void attach_VehiculoUsuario(VehiculoUsuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoModelo = this;
		}
		
		private void detach_VehiculoUsuario(VehiculoUsuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoModelo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoPagos")]
	public partial class TipoPagos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<Ordenes> _Ordenes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoPagos()
		{
			this._Ordenes = new EntitySet<Ordenes>(new Action<Ordenes>(this.attach_Ordenes), new Action<Ordenes>(this.detach_Ordenes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoPagos_Ordenes", Storage="_Ordenes", ThisKey="Id", OtherKey="IdTipoPago")]
		public EntitySet<Ordenes> Ordenes
		{
			get
			{
				return this._Ordenes;
			}
			set
			{
				this._Ordenes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordenes(Ordenes entity)
		{
			this.SendPropertyChanging();
			entity.TipoPagos = this;
		}
		
		private void detach_Ordenes(Ordenes entity)
		{
			this.SendPropertyChanging();
			entity.TipoPagos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehiculoUsuario")]
	public partial class VehiculoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdTipoModelo;
		
		private int _A_o;
		
		private string _VIN;
		
		private int _IdCombustible;
		
		private EntityRef<Combustibles> _Combustibles;
		
		private EntityRef<TipoModelo> _TipoModelo;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdTipoModeloChanging(int value);
    partial void OnIdTipoModeloChanged();
    partial void OnA_oChanging(int value);
    partial void OnA_oChanged();
    partial void OnVINChanging(string value);
    partial void OnVINChanged();
    partial void OnIdCombustibleChanging(int value);
    partial void OnIdCombustibleChanged();
    #endregion
		
		public VehiculoUsuario()
		{
			this._Combustibles = default(EntityRef<Combustibles>);
			this._TipoModelo = default(EntityRef<TipoModelo>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoModelo", DbType="Int NOT NULL")]
		public int IdTipoModelo
		{
			get
			{
				return this._IdTipoModelo;
			}
			set
			{
				if ((this._IdTipoModelo != value))
				{
					if (this._TipoModelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoModeloChanging(value);
					this.SendPropertyChanging();
					this._IdTipoModelo = value;
					this.SendPropertyChanged("IdTipoModelo");
					this.OnIdTipoModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_o", DbType="Int NOT NULL")]
		public int A_o
		{
			get
			{
				return this._A_o;
			}
			set
			{
				if ((this._A_o != value))
				{
					this.OnA_oChanging(value);
					this.SendPropertyChanging();
					this._A_o = value;
					this.SendPropertyChanged("A_o");
					this.OnA_oChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VIN
		{
			get
			{
				return this._VIN;
			}
			set
			{
				if ((this._VIN != value))
				{
					this.OnVINChanging(value);
					this.SendPropertyChanging();
					this._VIN = value;
					this.SendPropertyChanged("VIN");
					this.OnVINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCombustible", DbType="Int NOT NULL")]
		public int IdCombustible
		{
			get
			{
				return this._IdCombustible;
			}
			set
			{
				if ((this._IdCombustible != value))
				{
					if (this._Combustibles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCombustibleChanging(value);
					this.SendPropertyChanging();
					this._IdCombustible = value;
					this.SendPropertyChanged("IdCombustible");
					this.OnIdCombustibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combustibles_VehiculoUsuario", Storage="_Combustibles", ThisKey="IdCombustible", OtherKey="Id", IsForeignKey=true)]
		public Combustibles Combustibles
		{
			get
			{
				return this._Combustibles.Entity;
			}
			set
			{
				Combustibles previousValue = this._Combustibles.Entity;
				if (((previousValue != value) 
							|| (this._Combustibles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Combustibles.Entity = null;
						previousValue.VehiculoUsuario.Remove(this);
					}
					this._Combustibles.Entity = value;
					if ((value != null))
					{
						value.VehiculoUsuario.Add(this);
						this._IdCombustible = value.Id;
					}
					else
					{
						this._IdCombustible = default(int);
					}
					this.SendPropertyChanged("Combustibles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoModelo_VehiculoUsuario", Storage="_TipoModelo", ThisKey="IdTipoModelo", OtherKey="Id", IsForeignKey=true)]
		public TipoModelo TipoModelo
		{
			get
			{
				return this._TipoModelo.Entity;
			}
			set
			{
				TipoModelo previousValue = this._TipoModelo.Entity;
				if (((previousValue != value) 
							|| (this._TipoModelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoModelo.Entity = null;
						previousValue.VehiculoUsuario.Remove(this);
					}
					this._TipoModelo.Entity = value;
					if ((value != null))
					{
						value.VehiculoUsuario.Add(this);
						this._IdTipoModelo = value.Id;
					}
					else
					{
						this._IdTipoModelo = default(int);
					}
					this.SendPropertyChanged("TipoModelo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_VehiculoUsuario", Storage="_Usuarios", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.VehiculoUsuario = null;
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.VehiculoUsuario = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Modelos")]
	public partial class v_Modelos
	{
		
		private int _Id;
		
		private string _Modelo;
		
		public v_Modelos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this._Modelo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repuestos")]
	public partial class Repuestos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CodigoProducto;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private int _Cantidad;
		
		private int _IdCategoria;
		
		private int _IdCombustible;
		
		private System.Nullable<bool> _EsUsado;
		
		private EntitySet<Fotos> _Fotos;
		
		private EntitySet<RepuestosPorTipoDeModelo> _RepuestosPorTipoDeModelo;
		
		private EntitySet<DetalleCarrito> _DetalleCarrito;
		
		private EntityRef<Categorias> _Categorias;
		
		private EntityRef<Combustibles> _Combustibles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodigoProductoChanging(string value);
    partial void OnCodigoProductoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnIdCombustibleChanging(int value);
    partial void OnIdCombustibleChanged();
    partial void OnEsUsadoChanging(System.Nullable<bool> value);
    partial void OnEsUsadoChanged();
    #endregion
		
		public Repuestos()
		{
			this._Fotos = new EntitySet<Fotos>(new Action<Fotos>(this.attach_Fotos), new Action<Fotos>(this.detach_Fotos));
			this._RepuestosPorTipoDeModelo = new EntitySet<RepuestosPorTipoDeModelo>(new Action<RepuestosPorTipoDeModelo>(this.attach_RepuestosPorTipoDeModelo), new Action<RepuestosPorTipoDeModelo>(this.detach_RepuestosPorTipoDeModelo));
			this._DetalleCarrito = new EntitySet<DetalleCarrito>(new Action<DetalleCarrito>(this.attach_DetalleCarrito), new Action<DetalleCarrito>(this.detach_DetalleCarrito));
			this._Categorias = default(EntityRef<Categorias>);
			this._Combustibles = default(EntityRef<Combustibles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoProducto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CodigoProducto
		{
			get
			{
				return this._CodigoProducto;
			}
			set
			{
				if ((this._CodigoProducto != value))
				{
					this.OnCodigoProductoChanging(value);
					this.SendPropertyChanging();
					this._CodigoProducto = value;
					this.SendPropertyChanged("CodigoProducto");
					this.OnCodigoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL")]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._Categorias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCombustible", DbType="Int NOT NULL")]
		public int IdCombustible
		{
			get
			{
				return this._IdCombustible;
			}
			set
			{
				if ((this._IdCombustible != value))
				{
					if (this._Combustibles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCombustibleChanging(value);
					this.SendPropertyChanging();
					this._IdCombustible = value;
					this.SendPropertyChanged("IdCombustible");
					this.OnIdCombustibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsUsado", DbType="Bit")]
		public System.Nullable<bool> EsUsado
		{
			get
			{
				return this._EsUsado;
			}
			set
			{
				if ((this._EsUsado != value))
				{
					this.OnEsUsadoChanging(value);
					this.SendPropertyChanging();
					this._EsUsado = value;
					this.SendPropertyChanged("EsUsado");
					this.OnEsUsadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repuestos_Fotos", Storage="_Fotos", ThisKey="Id", OtherKey="IdRepuesto")]
		public EntitySet<Fotos> Fotos
		{
			get
			{
				return this._Fotos;
			}
			set
			{
				this._Fotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repuestos_RepuestosPorTipoDeModelo", Storage="_RepuestosPorTipoDeModelo", ThisKey="Id", OtherKey="IdRepuesto")]
		public EntitySet<RepuestosPorTipoDeModelo> RepuestosPorTipoDeModelo
		{
			get
			{
				return this._RepuestosPorTipoDeModelo;
			}
			set
			{
				this._RepuestosPorTipoDeModelo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repuestos_DetalleCarrito", Storage="_DetalleCarrito", ThisKey="Id", OtherKey="IdRepuesto")]
		public EntitySet<DetalleCarrito> DetalleCarrito
		{
			get
			{
				return this._DetalleCarrito;
			}
			set
			{
				this._DetalleCarrito.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorias_Repuestos", Storage="_Categorias", ThisKey="IdCategoria", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Categorias Categorias
		{
			get
			{
				return this._Categorias.Entity;
			}
			set
			{
				Categorias previousValue = this._Categorias.Entity;
				if (((previousValue != value) 
							|| (this._Categorias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorias.Entity = null;
						previousValue.Repuestos.Remove(this);
					}
					this._Categorias.Entity = value;
					if ((value != null))
					{
						value.Repuestos.Add(this);
						this._IdCategoria = value.Id;
					}
					else
					{
						this._IdCategoria = default(int);
					}
					this.SendPropertyChanged("Categorias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combustibles_Repuestos", Storage="_Combustibles", ThisKey="IdCombustible", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Combustibles Combustibles
		{
			get
			{
				return this._Combustibles.Entity;
			}
			set
			{
				Combustibles previousValue = this._Combustibles.Entity;
				if (((previousValue != value) 
							|| (this._Combustibles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Combustibles.Entity = null;
						previousValue.Repuestos.Remove(this);
					}
					this._Combustibles.Entity = value;
					if ((value != null))
					{
						value.Repuestos.Add(this);
						this._IdCombustible = value.Id;
					}
					else
					{
						this._IdCombustible = default(int);
					}
					this.SendPropertyChanged("Combustibles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fotos(Fotos entity)
		{
			this.SendPropertyChanging();
			entity.Repuestos = this;
		}
		
		private void detach_Fotos(Fotos entity)
		{
			this.SendPropertyChanging();
			entity.Repuestos = null;
		}
		
		private void attach_RepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo entity)
		{
			this.SendPropertyChanging();
			entity.Repuestos = this;
		}
		
		private void detach_RepuestosPorTipoDeModelo(RepuestosPorTipoDeModelo entity)
		{
			this.SendPropertyChanging();
			entity.Repuestos = null;
		}
		
		private void attach_DetalleCarrito(DetalleCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Repuestos = this;
		}
		
		private void detach_DetalleCarrito(DetalleCarrito entity)
		{
			this.SendPropertyChanging();
			entity.Repuestos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_repuestosPorTipoDeModelo")]
	public partial class v_repuestosPorTipoDeModelo
	{
		
		private int _IdRepuesto;
		
		private string _CodigoProducto;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private int _Cantidad;
		
		private int _IdCategoria;
		
		private string _Categoria;
		
		private int _IdCombustible;
		
		private string _Combustible;
		
		private System.Nullable<bool> _EsUsado;
		
		private string _Foto;
		
		private int _IdTipoModelo;
		
		private string _TipoModelo;
		
		private int _IdModelo;
		
		private string _Modelo;
		
		private string _RangoA_os;
		
		public v_repuestosPorTipoDeModelo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRepuesto", DbType="Int NOT NULL")]
		public int IdRepuesto
		{
			get
			{
				return this._IdRepuesto;
			}
			set
			{
				if ((this._IdRepuesto != value))
				{
					this._IdRepuesto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoProducto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CodigoProducto
		{
			get
			{
				return this._CodigoProducto;
			}
			set
			{
				if ((this._CodigoProducto != value))
				{
					this._CodigoProducto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this._Precio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this._Cantidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL")]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this._IdCategoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(100)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this._Categoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCombustible", DbType="Int NOT NULL")]
		public int IdCombustible
		{
			get
			{
				return this._IdCombustible;
			}
			set
			{
				if ((this._IdCombustible != value))
				{
					this._IdCombustible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Combustible", DbType="VarChar(100)")]
		public string Combustible
		{
			get
			{
				return this._Combustible;
			}
			set
			{
				if ((this._Combustible != value))
				{
					this._Combustible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsUsado", DbType="Bit")]
		public System.Nullable<bool> EsUsado
		{
			get
			{
				return this._EsUsado;
			}
			set
			{
				if ((this._EsUsado != value))
				{
					this._EsUsado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="VarChar(MAX)")]
		public string Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this._Foto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoModelo", DbType="Int NOT NULL")]
		public int IdTipoModelo
		{
			get
			{
				return this._IdTipoModelo;
			}
			set
			{
				if ((this._IdTipoModelo != value))
				{
					this._IdTipoModelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoModelo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TipoModelo
		{
			get
			{
				return this._TipoModelo;
			}
			set
			{
				if ((this._TipoModelo != value))
				{
					this._TipoModelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModelo", DbType="Int NOT NULL")]
		public int IdModelo
		{
			get
			{
				return this._IdModelo;
			}
			set
			{
				if ((this._IdModelo != value))
				{
					this._IdModelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this._Modelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangoA_os", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string RangoA_os
		{
			get
			{
				return this._RangoA_os;
			}
			set
			{
				if ((this._RangoA_os != value))
				{
					this._RangoA_os = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleCarrito")]
	public partial class DetalleCarrito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdCarrito;
		
		private int _IdRepuesto;
		
		private int _Cantidad;
		
		private decimal _Precio;
		
		private EntityRef<Carritos> _Carritos;
		
		private EntityRef<Repuestos> _Repuestos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdCarritoChanging(int value);
    partial void OnIdCarritoChanged();
    partial void OnIdRepuestoChanging(int value);
    partial void OnIdRepuestoChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public DetalleCarrito()
		{
			this._Carritos = default(EntityRef<Carritos>);
			this._Repuestos = default(EntityRef<Repuestos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCarrito", DbType="Int NOT NULL")]
		public int IdCarrito
		{
			get
			{
				return this._IdCarrito;
			}
			set
			{
				if ((this._IdCarrito != value))
				{
					if (this._Carritos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCarritoChanging(value);
					this.SendPropertyChanging();
					this._IdCarrito = value;
					this.SendPropertyChanged("IdCarrito");
					this.OnIdCarritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRepuesto", DbType="Int NOT NULL")]
		public int IdRepuesto
		{
			get
			{
				return this._IdRepuesto;
			}
			set
			{
				if ((this._IdRepuesto != value))
				{
					if (this._Repuestos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRepuestoChanging(value);
					this.SendPropertyChanging();
					this._IdRepuesto = value;
					this.SendPropertyChanged("IdRepuesto");
					this.OnIdRepuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Carritos_DetalleCarrito", Storage="_Carritos", ThisKey="IdCarrito", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Carritos Carritos
		{
			get
			{
				return this._Carritos.Entity;
			}
			set
			{
				Carritos previousValue = this._Carritos.Entity;
				if (((previousValue != value) 
							|| (this._Carritos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carritos.Entity = null;
						previousValue.DetalleCarrito.Remove(this);
					}
					this._Carritos.Entity = value;
					if ((value != null))
					{
						value.DetalleCarrito.Add(this);
						this._IdCarrito = value.Id;
					}
					else
					{
						this._IdCarrito = default(int);
					}
					this.SendPropertyChanged("Carritos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repuestos_DetalleCarrito", Storage="_Repuestos", ThisKey="IdRepuesto", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Repuestos Repuestos
		{
			get
			{
				return this._Repuestos.Entity;
			}
			set
			{
				Repuestos previousValue = this._Repuestos.Entity;
				if (((previousValue != value) 
							|| (this._Repuestos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Repuestos.Entity = null;
						previousValue.DetalleCarrito.Remove(this);
					}
					this._Repuestos.Entity = value;
					if ((value != null))
					{
						value.DetalleCarrito.Add(this);
						this._IdRepuesto = value.Id;
					}
					else
					{
						this._IdRepuesto = default(int);
					}
					this.SendPropertyChanged("Repuestos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Correo;
		
		private string _Clave;
		
		private bool _Administrador;
		
		private bool _Habilitado;
		
		private string _Token;
		
		private EntitySet<Carritos> _Carritos;
		
		private EntityRef<DetalleUsuario> _DetalleUsuario;
		
		private EntityRef<VehiculoUsuario> _VehiculoUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnAdministradorChanging(bool value);
    partial void OnAdministradorChanged();
    partial void OnHabilitadoChanging(bool value);
    partial void OnHabilitadoChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    #endregion
		
		public Usuarios()
		{
			this._Carritos = new EntitySet<Carritos>(new Action<Carritos>(this.attach_Carritos), new Action<Carritos>(this.detach_Carritos));
			this._DetalleUsuario = default(EntityRef<DetalleUsuario>);
			this._VehiculoUsuario = default(EntityRef<VehiculoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
		public bool Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Bit NOT NULL")]
		public bool Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(32)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Carritos", Storage="_Carritos", ThisKey="Id", OtherKey="IdUsuario")]
		public EntitySet<Carritos> Carritos
		{
			get
			{
				return this._Carritos;
			}
			set
			{
				this._Carritos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_DetalleUsuario", Storage="_DetalleUsuario", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public DetalleUsuario DetalleUsuario
		{
			get
			{
				return this._DetalleUsuario.Entity;
			}
			set
			{
				DetalleUsuario previousValue = this._DetalleUsuario.Entity;
				if (((previousValue != value) 
							|| (this._DetalleUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetalleUsuario.Entity = null;
						previousValue.Usuarios = null;
					}
					this._DetalleUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuarios = this;
					}
					this.SendPropertyChanged("DetalleUsuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_VehiculoUsuario", Storage="_VehiculoUsuario", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public VehiculoUsuario VehiculoUsuario
		{
			get
			{
				return this._VehiculoUsuario.Entity;
			}
			set
			{
				VehiculoUsuario previousValue = this._VehiculoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._VehiculoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehiculoUsuario.Entity = null;
						previousValue.Usuarios = null;
					}
					this._VehiculoUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuarios = this;
					}
					this.SendPropertyChanged("VehiculoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carritos(Carritos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Carritos(Carritos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Usuarios")]
	public partial class v_Usuarios
	{
		
		private int _IdUsuario;
		
		private string _Correo;
		
		private string _Clave;
		
		private bool _Administrador;
		
		private bool _Habilitado;
		
		private string _Token;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private int _IdTipoModelo;
		
		private string _TipoModelo;
		
		private int _A_o;
		
		private int _IdModelo;
		
		private string _Modelo;
		
		private string _RangoA_os;
		
		public v_Usuarios()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this._IdUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this._Correo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this._Clave = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
		public bool Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this._Administrador = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Habilitado", DbType="Bit NOT NULL")]
		public bool Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this._Habilitado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(32)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this._Apellidos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoModelo", DbType="Int NOT NULL")]
		public int IdTipoModelo
		{
			get
			{
				return this._IdTipoModelo;
			}
			set
			{
				if ((this._IdTipoModelo != value))
				{
					this._IdTipoModelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoModelo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TipoModelo
		{
			get
			{
				return this._TipoModelo;
			}
			set
			{
				if ((this._TipoModelo != value))
				{
					this._TipoModelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_o", DbType="Int NOT NULL")]
		public int A_o
		{
			get
			{
				return this._A_o;
			}
			set
			{
				if ((this._A_o != value))
				{
					this._A_o = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModelo", DbType="Int NOT NULL")]
		public int IdModelo
		{
			get
			{
				return this._IdModelo;
			}
			set
			{
				if ((this._IdModelo != value))
				{
					this._IdModelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this._Modelo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangoA_os", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string RangoA_os
		{
			get
			{
				return this._RangoA_os;
			}
			set
			{
				if ((this._RangoA_os != value))
				{
					this._RangoA_os = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Ordenes")]
	public partial class v_Ordenes
	{
		
		private int _IdOrden;
		
		private int _IdTipoPago;
		
		private string _TipoPago;
		
		private int _IdZona;
		
		private string _Zona;
		
		private bool _Procesada;
		
		private int _IdCarrito;
		
		private int _IdUsuario;
		
		private System.DateTime _Fecha;
		
		public v_Ordenes()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOrden", DbType="Int NOT NULL")]
		public int IdOrden
		{
			get
			{
				return this._IdOrden;
			}
			set
			{
				if ((this._IdOrden != value))
				{
					this._IdOrden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoPago", DbType="Int NOT NULL")]
		public int IdTipoPago
		{
			get
			{
				return this._IdTipoPago;
			}
			set
			{
				if ((this._IdTipoPago != value))
				{
					this._IdTipoPago = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoPago", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TipoPago
		{
			get
			{
				return this._TipoPago;
			}
			set
			{
				if ((this._TipoPago != value))
				{
					this._TipoPago = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZona", DbType="Int NOT NULL")]
		public int IdZona
		{
			get
			{
				return this._IdZona;
			}
			set
			{
				if ((this._IdZona != value))
				{
					this._IdZona = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zona", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Zona
		{
			get
			{
				return this._Zona;
			}
			set
			{
				if ((this._Zona != value))
				{
					this._Zona = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procesada", DbType="Bit NOT NULL")]
		public bool Procesada
		{
			get
			{
				return this._Procesada;
			}
			set
			{
				if ((this._Procesada != value))
				{
					this._Procesada = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCarrito", DbType="Int NOT NULL")]
		public int IdCarrito
		{
			get
			{
				return this._IdCarrito;
			}
			set
			{
				if ((this._IdCarrito != value))
				{
					this._IdCarrito = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this._IdUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime2 NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this._Fecha = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
